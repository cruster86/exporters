global:
  imagePullSecrets: []

replicaCount: 1

restartPolicy: Always

image:
  pullPolicy: IfNotPresent
  pullSecret:
  - gitlab-registry
  repository: registry.sirius.online/infra/exporters/elasticsearch-exporter
  tag: v1.5.0

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: "RuntimeDefault"

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

dnsConfig: {}

log:
  format: logfmt
  level: info

resources: {}

priorityClassName: ""

nodeSelector: {}

tolerations: []

podAnnotations: {}

podLabels: {}

affinity: {}

service:
  type: ClusterIP
  httpPort: 9108
  metricsPort:
    name: http
  annotations: {}
  labels: {}

deployment:
  annotations: {}
  labels: {}

env: {}

extraArgs: []

envFromSecret: ""

extraEnvSecrets: {}

secretMounts: []

extraVolumes: []

extraVolumeMounts: []

es:
  uri: http://localhost:9200
  all: true
  indices: true
  indices_settings: true
  indices_mappings: true
  shards: true
  snapshots: true
  cluster_settings: false
  timeout: 30s
  sslSkipVerify: false
  ssl:
    enabled: false
    useExistingSecrets: false
    ca:
      path: /ssl/ca.pem
    client:
      enabled: true
      pemPath: /ssl/client.pem
      keyPath: /ssl/client.key
web:
  path: /metrics

serviceMonitor:
  enabled: false
  #namespace: monitoring
  labels: {}
  interval: 10s
  jobLabel: ""
  scrapeTimeout: 10s
  scheme: http
  relabelings: []
  targetLabels: []
  metricRelabelings: []
  sampleLimit: 0

prometheusRule:
  enabled: false
  #namespace: monitoring
  labels: {}
  rules: []

serviceAccount:
  create: false
  name: default
  automountServiceAccountToken: true
  annotations: {}

podSecurityPolicies:
  enabled: false
