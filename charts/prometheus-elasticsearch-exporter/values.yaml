## Global settings for all charts in a tree of dependent charts
global:
  imagePullSecrets: []

## number of exporter instances
replicaCount: 1

## restart policy for all containers
restartPolicy: Always

image:
  pullPolicy: IfNotPresent
  pullSecret:
  - gitlab-registry
  repository: registry.sirius.online/infra/exporters/elasticsearch-exporter
  tag: v1.5.0

# The securityContext of the pod.
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: "RuntimeDefault"

securityContext:
  enabled: true
  runAsUser: 1000
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# Custom DNS configuration to be added to prometheus-elasticsearch-exporter pods
dnsConfig: {}

log:
  format: logfmt
  level: info

resources: {}

priorityClassName: ""

nodeSelector: {}

tolerations: []

podAnnotations: {}

podLabels: {}

affinity: {}

# Create service
service:
  type: ClusterIP
  httpPort: 9108
  metricsPort:
    name: http
  annotations: {}
  labels: {}

# Extra labels and annotations for deployment
deployment:
  annotations: {}
  labels: {}

## Extra environment variables that will be passed into the exporter pod
env: {}

## Extra arguments to pass to the container's executable
extraArgs: []

## The name of a secret in the same kubernetes namespace which contain values to be added to the environment
envFromSecret: ""

## A list of environment variables from secret refs that will be passed into the exporter pod
extraEnvSecrets: {}

# A list of secrets and their paths to mount inside the pod
secretMounts: []

# A list of additional Volume to add to the deployment
extraVolumes: []

#  A list of additional VolumeMounts to add to the deployment
extraVolumeMounts: []

es:
  ## Address (host and port) of the Elasticsearch node we should connect to.
  uri: http://localhost:9200
  ## If true, query stats for all nodes in the cluster
  all: true
  ## If true, query stats for all indices in the cluster
  indices: true
  ## If true, query settings stats for all indices in the cluster.
  indices_settings: true
  ## If true, query mapping stats for all indices in the cluster.
  indices_mappings: true
  ## If true, query stats for shards in the cluster.
  shards: true
  ## If true, query stats for snapshots in the cluster.
  snapshots: true
  ## If true, query stats for cluster settings.
  cluster_settings: false
  ## Timeout for trying to get stats from Elasticsearch.
  timeout: 30s
  sslSkipVerify: false
  ssl:
    ## If true, a secure connection to ES cluster is used
    enabled: false
    ## If true, certs from secretMounts will be need to be referenced
    useExistingSecrets: false
    ca:
      ## PEM that contains trusted CAs used for setting up secure Elasticsearch connection
      path: /ssl/ca.pem
    client:
      ## if true, client SSL certificate is used for authentication
      enabled: true
      # Path of client pem file which should match a secretMount path
      pemPath: /ssl/client.pem
      # Path of client key file which should match a secretMount path
      keyPath: /ssl/client.key
web:
  ## Path under which to expose metrics.
  path: /metrics

# Create a serviceaccount
serviceMonitor:
  ## If true, a ServiceMonitor CRD is created for a prometheus operator
  enabled: false
  labels: {}
  interval: 10s
  jobLabel: ""
  scrapeTimeout: 10s
  scheme: http
  relabelings: []
  targetLabels: []
  metricRelabelings: []
  sampleLimit: 0

prometheusRule:
  ## If true, a PrometheusRule CRD is created for a prometheus operator
  enabled: false
  labels: {}
  rules: []

# Create a service account
serviceAccount:
  create: false
  name: default
  automountServiceAccountToken: true
  annotations: {}

# Creates a PodSecurityPolicy and the role/rolebinding allowing the serviceaccount to use it
podSecurityPolicies:
  enabled: false

# Включаем ли мы секреты
secrets:
  enabled: true